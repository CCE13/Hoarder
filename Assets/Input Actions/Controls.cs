//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input Actions/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""RIPGUY"",
            ""id"": ""e4bae569-700f-4462-a2a6-6abbd46fc1ee"",
            ""actions"": [
                {
                    ""name"": ""LA"",
                    ""type"": ""Button"",
                    ""id"": ""317fbc12-4ed1-467b-9b71-4fb17582af8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HA"",
                    ""type"": ""Button"",
                    ""id"": ""6bacf3a1-6c84-43f5-a940-42b97bca5513"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LH"",
                    ""type"": ""Button"",
                    ""id"": ""ee811d44-7271-4aac-8053-0e1f7027eded"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""08f263dc-7d3b-407e-816a-773fb3a0996e"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""99659262-8207-413d-a8cc-16bd4ced4b32"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6ff03ad-b22a-472b-964f-68cb2a55dd5f"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""886ad8d5-529a-4e63-9f81-c74bd929e3da"",
                    ""path"": ""OneModifier"",
                    ""interactions"": ""Hold(duration=0.15,pressPoint=0.1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LH"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""90194d09-e55c-43b7-9b4f-88af82d84050"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LH"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""b394d56a-33a9-456b-841c-651213ab7577"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LH"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""ce1419e6-da5b-4063-a125-ecf41ee426a3"",
                    ""path"": ""3DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""54d4cbbe-9ca2-466c-a269-892167868c86"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""28e9abe4-7b4a-42de-83b3-2e08ca43800b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""f1b03f2c-dc30-4878-b5cc-cde72b976f05"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""86ee5db9-50d1-4790-b6f5-0b7e4206eb0f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""SwordsMan"",
            ""id"": ""13c2473a-7a2b-4a31-a60a-195d27d0659e"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""13aa0bd9-bb9b-436d-8996-0a1ae18695ec"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""df65a8bc-6720-4d85-84a2-4a25de4d526b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractionNAV"",
                    ""type"": ""Value"",
                    ""id"": ""4b40c684-eaaf-403b-8213-be37ff6c451a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InteractionSelect"",
                    ""type"": ""Button"",
                    ""id"": ""b29757b0-d1d6-4b49-8fe5-e991a49ca458"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""72c2328f-8624-4f90-bf19-d3761b53a0b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectEnemy"",
                    ""type"": ""Button"",
                    ""id"": ""2b093b67-e447-4a96-b507-a717c41793c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""70a241f2-d50a-401e-a5c6-354d74fee8ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""8a4e7741-00d0-453d-8ef5-3adb8293cd70"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""cdcc9c13-499f-4238-aee2-8eac4b5162ec"",
                    ""path"": ""3DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c19375d6-b96a-403f-9c37-dc8fb4fdb31b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0cdafa63-1f09-43cc-b900-ea2edb086378"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""84a512ba-a11d-4c48-aa57-4d22b1907d4d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""6cd9d314-f4a8-4ffc-a6a8-63e121f00116"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ff3466e0-52e6-4d31-b213-ed7377338ac1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5acfc778-8692-44e1-8c21-e4ad30ffcfea"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionNAV"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d1ae5835-8059-44f2-aab2-9a491e552994"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionNAV"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""65ac7b89-dea5-4b53-8e6c-cccd04bc8d81"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionNAV"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0cb64d8e-1ffd-4a12-921e-8a3e36f36d4c"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1376c57c-4ada-4b2e-b405-9a967fd02e9b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f95d18a9-6016-40ea-8073-ddb99049f08b"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectEnemy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb90e51d-9618-47bd-b7ef-ab4f4d0af01b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9782e2c-1def-4eb5-bd4a-8b698ca3019c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Ranger"",
            ""id"": ""84948547-619a-47cd-9158-9ad7e05a8556"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""eac596a6-6b27-4865-aedd-481e1a104816"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""73db45fa-422d-4c7c-acb0-ca8c9806e93a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractionNAV"",
                    ""type"": ""Value"",
                    ""id"": ""a0f2d07d-3dd5-42de-81a9-893e4353eadf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InteractionSelect"",
                    ""type"": ""Button"",
                    ""id"": ""fa58a638-b1dd-4bea-b0f2-dcb44e84c76c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""f21053d6-ab9f-49e3-9eae-aa0d026b21dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectEnemy"",
                    ""type"": ""Button"",
                    ""id"": ""ae9c72a1-4ff7-4497-8e92-36bb75782eec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""d9389a94-1119-42c8-a1d8-4b68c2401cd9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""6c1c6f2a-40df-4afe-add1-fd6c54f32378"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""d6ab30cc-3b74-4d9b-b27c-082223a1674d"",
                    ""path"": ""3DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a35da3ff-5820-4a31-a49d-ace13fb615d0"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fd37039e-1012-4611-8a2a-872cacc11b7c"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""3b4b9422-e9cd-46aa-8c07-e93565ffe6ad"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""802252fb-6b50-4c06-953f-9fce1bb9a10e"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cd3cf869-52b8-4387-aa52-fdea8c903a67"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""74670667-e7da-42bd-afa2-69a7e4b48c3d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionNAV"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1faed3d1-fe78-4d0e-be3d-08e3ecb6f37b"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionNAV"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b18afcd9-8539-424c-aa62-3124707dc87d"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionNAV"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b8fe7baa-e21c-4701-93d2-4e7f437cfa81"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ef32eb7-741d-475f-9fef-4188f13b3285"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""652a28c9-0a3e-4b3f-a7e2-6e143f451c0b"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectEnemy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ad59e66-5ff1-4dbc-ae84-3755e272c2a2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c717503a-e6d5-4a3b-a844-23a72e287db4"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""New control scheme"",
            ""bindingGroup"": ""New control scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // RIPGUY
        m_RIPGUY = asset.FindActionMap("RIPGUY", throwIfNotFound: true);
        m_RIPGUY_LA = m_RIPGUY.FindAction("LA", throwIfNotFound: true);
        m_RIPGUY_HA = m_RIPGUY.FindAction("HA", throwIfNotFound: true);
        m_RIPGUY_LH = m_RIPGUY.FindAction("LH", throwIfNotFound: true);
        m_RIPGUY_Movement = m_RIPGUY.FindAction("Movement", throwIfNotFound: true);
        // SwordsMan
        m_SwordsMan = asset.FindActionMap("SwordsMan", throwIfNotFound: true);
        m_SwordsMan_Movement = m_SwordsMan.FindAction("Movement", throwIfNotFound: true);
        m_SwordsMan_Interaction = m_SwordsMan.FindAction("Interaction", throwIfNotFound: true);
        m_SwordsMan_InteractionNAV = m_SwordsMan.FindAction("InteractionNAV", throwIfNotFound: true);
        m_SwordsMan_InteractionSelect = m_SwordsMan.FindAction("InteractionSelect", throwIfNotFound: true);
        m_SwordsMan_Attack = m_SwordsMan.FindAction("Attack", throwIfNotFound: true);
        m_SwordsMan_SelectEnemy = m_SwordsMan.FindAction("SelectEnemy", throwIfNotFound: true);
        m_SwordsMan_Pause = m_SwordsMan.FindAction("Pause", throwIfNotFound: true);
        m_SwordsMan_Roll = m_SwordsMan.FindAction("Roll", throwIfNotFound: true);
        // Ranger
        m_Ranger = asset.FindActionMap("Ranger", throwIfNotFound: true);
        m_Ranger_Movement = m_Ranger.FindAction("Movement", throwIfNotFound: true);
        m_Ranger_Interaction = m_Ranger.FindAction("Interaction", throwIfNotFound: true);
        m_Ranger_InteractionNAV = m_Ranger.FindAction("InteractionNAV", throwIfNotFound: true);
        m_Ranger_InteractionSelect = m_Ranger.FindAction("InteractionSelect", throwIfNotFound: true);
        m_Ranger_Attack = m_Ranger.FindAction("Attack", throwIfNotFound: true);
        m_Ranger_SelectEnemy = m_Ranger.FindAction("SelectEnemy", throwIfNotFound: true);
        m_Ranger_Roll = m_Ranger.FindAction("Roll", throwIfNotFound: true);
        m_Ranger_Pause = m_Ranger.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // RIPGUY
    private readonly InputActionMap m_RIPGUY;
    private IRIPGUYActions m_RIPGUYActionsCallbackInterface;
    private readonly InputAction m_RIPGUY_LA;
    private readonly InputAction m_RIPGUY_HA;
    private readonly InputAction m_RIPGUY_LH;
    private readonly InputAction m_RIPGUY_Movement;
    public struct RIPGUYActions
    {
        private @Controls m_Wrapper;
        public RIPGUYActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LA => m_Wrapper.m_RIPGUY_LA;
        public InputAction @HA => m_Wrapper.m_RIPGUY_HA;
        public InputAction @LH => m_Wrapper.m_RIPGUY_LH;
        public InputAction @Movement => m_Wrapper.m_RIPGUY_Movement;
        public InputActionMap Get() { return m_Wrapper.m_RIPGUY; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RIPGUYActions set) { return set.Get(); }
        public void SetCallbacks(IRIPGUYActions instance)
        {
            if (m_Wrapper.m_RIPGUYActionsCallbackInterface != null)
            {
                @LA.started -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnLA;
                @LA.performed -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnLA;
                @LA.canceled -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnLA;
                @HA.started -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnHA;
                @HA.performed -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnHA;
                @HA.canceled -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnHA;
                @LH.started -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnLH;
                @LH.performed -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnLH;
                @LH.canceled -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnLH;
                @Movement.started -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_RIPGUYActionsCallbackInterface.OnMovement;
            }
            m_Wrapper.m_RIPGUYActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LA.started += instance.OnLA;
                @LA.performed += instance.OnLA;
                @LA.canceled += instance.OnLA;
                @HA.started += instance.OnHA;
                @HA.performed += instance.OnHA;
                @HA.canceled += instance.OnHA;
                @LH.started += instance.OnLH;
                @LH.performed += instance.OnLH;
                @LH.canceled += instance.OnLH;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
            }
        }
    }
    public RIPGUYActions @RIPGUY => new RIPGUYActions(this);

    // SwordsMan
    private readonly InputActionMap m_SwordsMan;
    private ISwordsManActions m_SwordsManActionsCallbackInterface;
    private readonly InputAction m_SwordsMan_Movement;
    private readonly InputAction m_SwordsMan_Interaction;
    private readonly InputAction m_SwordsMan_InteractionNAV;
    private readonly InputAction m_SwordsMan_InteractionSelect;
    private readonly InputAction m_SwordsMan_Attack;
    private readonly InputAction m_SwordsMan_SelectEnemy;
    private readonly InputAction m_SwordsMan_Pause;
    private readonly InputAction m_SwordsMan_Roll;
    public struct SwordsManActions
    {
        private @Controls m_Wrapper;
        public SwordsManActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_SwordsMan_Movement;
        public InputAction @Interaction => m_Wrapper.m_SwordsMan_Interaction;
        public InputAction @InteractionNAV => m_Wrapper.m_SwordsMan_InteractionNAV;
        public InputAction @InteractionSelect => m_Wrapper.m_SwordsMan_InteractionSelect;
        public InputAction @Attack => m_Wrapper.m_SwordsMan_Attack;
        public InputAction @SelectEnemy => m_Wrapper.m_SwordsMan_SelectEnemy;
        public InputAction @Pause => m_Wrapper.m_SwordsMan_Pause;
        public InputAction @Roll => m_Wrapper.m_SwordsMan_Roll;
        public InputActionMap Get() { return m_Wrapper.m_SwordsMan; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SwordsManActions set) { return set.Get(); }
        public void SetCallbacks(ISwordsManActions instance)
        {
            if (m_Wrapper.m_SwordsManActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnMovement;
                @Interaction.started -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnInteraction;
                @InteractionNAV.started -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnInteractionNAV;
                @InteractionNAV.performed -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnInteractionNAV;
                @InteractionNAV.canceled -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnInteractionNAV;
                @InteractionSelect.started -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnInteractionSelect;
                @InteractionSelect.performed -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnInteractionSelect;
                @InteractionSelect.canceled -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnInteractionSelect;
                @Attack.started -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnAttack;
                @SelectEnemy.started -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnSelectEnemy;
                @SelectEnemy.performed -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnSelectEnemy;
                @SelectEnemy.canceled -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnSelectEnemy;
                @Pause.started -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnPause;
                @Roll.started -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_SwordsManActionsCallbackInterface.OnRoll;
            }
            m_Wrapper.m_SwordsManActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @InteractionNAV.started += instance.OnInteractionNAV;
                @InteractionNAV.performed += instance.OnInteractionNAV;
                @InteractionNAV.canceled += instance.OnInteractionNAV;
                @InteractionSelect.started += instance.OnInteractionSelect;
                @InteractionSelect.performed += instance.OnInteractionSelect;
                @InteractionSelect.canceled += instance.OnInteractionSelect;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @SelectEnemy.started += instance.OnSelectEnemy;
                @SelectEnemy.performed += instance.OnSelectEnemy;
                @SelectEnemy.canceled += instance.OnSelectEnemy;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
            }
        }
    }
    public SwordsManActions @SwordsMan => new SwordsManActions(this);

    // Ranger
    private readonly InputActionMap m_Ranger;
    private IRangerActions m_RangerActionsCallbackInterface;
    private readonly InputAction m_Ranger_Movement;
    private readonly InputAction m_Ranger_Interaction;
    private readonly InputAction m_Ranger_InteractionNAV;
    private readonly InputAction m_Ranger_InteractionSelect;
    private readonly InputAction m_Ranger_Attack;
    private readonly InputAction m_Ranger_SelectEnemy;
    private readonly InputAction m_Ranger_Roll;
    private readonly InputAction m_Ranger_Pause;
    public struct RangerActions
    {
        private @Controls m_Wrapper;
        public RangerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Ranger_Movement;
        public InputAction @Interaction => m_Wrapper.m_Ranger_Interaction;
        public InputAction @InteractionNAV => m_Wrapper.m_Ranger_InteractionNAV;
        public InputAction @InteractionSelect => m_Wrapper.m_Ranger_InteractionSelect;
        public InputAction @Attack => m_Wrapper.m_Ranger_Attack;
        public InputAction @SelectEnemy => m_Wrapper.m_Ranger_SelectEnemy;
        public InputAction @Roll => m_Wrapper.m_Ranger_Roll;
        public InputAction @Pause => m_Wrapper.m_Ranger_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Ranger; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RangerActions set) { return set.Get(); }
        public void SetCallbacks(IRangerActions instance)
        {
            if (m_Wrapper.m_RangerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_RangerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_RangerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_RangerActionsCallbackInterface.OnMovement;
                @Interaction.started -= m_Wrapper.m_RangerActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_RangerActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_RangerActionsCallbackInterface.OnInteraction;
                @InteractionNAV.started -= m_Wrapper.m_RangerActionsCallbackInterface.OnInteractionNAV;
                @InteractionNAV.performed -= m_Wrapper.m_RangerActionsCallbackInterface.OnInteractionNAV;
                @InteractionNAV.canceled -= m_Wrapper.m_RangerActionsCallbackInterface.OnInteractionNAV;
                @InteractionSelect.started -= m_Wrapper.m_RangerActionsCallbackInterface.OnInteractionSelect;
                @InteractionSelect.performed -= m_Wrapper.m_RangerActionsCallbackInterface.OnInteractionSelect;
                @InteractionSelect.canceled -= m_Wrapper.m_RangerActionsCallbackInterface.OnInteractionSelect;
                @Attack.started -= m_Wrapper.m_RangerActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_RangerActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_RangerActionsCallbackInterface.OnAttack;
                @SelectEnemy.started -= m_Wrapper.m_RangerActionsCallbackInterface.OnSelectEnemy;
                @SelectEnemy.performed -= m_Wrapper.m_RangerActionsCallbackInterface.OnSelectEnemy;
                @SelectEnemy.canceled -= m_Wrapper.m_RangerActionsCallbackInterface.OnSelectEnemy;
                @Roll.started -= m_Wrapper.m_RangerActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_RangerActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_RangerActionsCallbackInterface.OnRoll;
                @Pause.started -= m_Wrapper.m_RangerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_RangerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_RangerActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_RangerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @InteractionNAV.started += instance.OnInteractionNAV;
                @InteractionNAV.performed += instance.OnInteractionNAV;
                @InteractionNAV.canceled += instance.OnInteractionNAV;
                @InteractionSelect.started += instance.OnInteractionSelect;
                @InteractionSelect.performed += instance.OnInteractionSelect;
                @InteractionSelect.canceled += instance.OnInteractionSelect;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @SelectEnemy.started += instance.OnSelectEnemy;
                @SelectEnemy.performed += instance.OnSelectEnemy;
                @SelectEnemy.canceled += instance.OnSelectEnemy;
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public RangerActions @Ranger => new RangerActions(this);
    private int m_NewcontrolschemeSchemeIndex = -1;
    public InputControlScheme NewcontrolschemeScheme
    {
        get
        {
            if (m_NewcontrolschemeSchemeIndex == -1) m_NewcontrolschemeSchemeIndex = asset.FindControlSchemeIndex("New control scheme");
            return asset.controlSchemes[m_NewcontrolschemeSchemeIndex];
        }
    }
    public interface IRIPGUYActions
    {
        void OnLA(InputAction.CallbackContext context);
        void OnHA(InputAction.CallbackContext context);
        void OnLH(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface ISwordsManActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnInteractionNAV(InputAction.CallbackContext context);
        void OnInteractionSelect(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnSelectEnemy(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
    }
    public interface IRangerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnInteractionNAV(InputAction.CallbackContext context);
        void OnInteractionSelect(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnSelectEnemy(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
